package concurrencia;

import java.util.concurrent.atomic.AtomicInteger;

public class LockTicket { 
    private AtomicInteger number;
    private volatile int next;
    private VolatileInt turn [];
    
    
    public LockTicket(int M){
    	this.number = new AtomicInteger(1);
    	this.next = 1;
    	this.turn = new VolatileInt[M];
    	for(int i = 0; i< M; ++i) {
    		turn[i] = new VolatileInt(0);
    	}
    }
    
    public void takeLock(int i) {
    	turn[i-1].e = number.getAndAdd(1);
    	
    	while(turn[i-1].e != next) ;
    }
    
    public void releaseLock(int i) {
    	next = next + 1;
    }
}
